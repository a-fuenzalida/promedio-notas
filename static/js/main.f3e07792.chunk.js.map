{"version":3,"sources":["components/Header/Header.js","components/ListaNotas/Nota/Nota.js","components/ListaNotas/ListaNotas.js","components/Footer/Footer.js","containers/App.js","serviceWorker.js","index.js"],"names":["header","props","react_default","a","createElement","className","nota","scope","index","id","type","max","placeholder","onChange","changed","listaNotas","notas","map","n","i","Nota","key","porcentaje","event","footer","onClick","addScore","deleteScore","showInfo","value","promedio","disabled","App","state","scoreChangedHandler","Object","objectSpread","_this","target","Number","toConsumableArray","console","log","setState","averageHandler","p","forEach","addScoreHandler","concat","deleteScoreHandler","pop","showInfoHandler","MySwal","withReactContent","Swal","fire","onOpen","clickConfirm","then","html","Header","ListaNotas","this","Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f3e07792.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst header = props => (\r\n  <header>\r\n    <nav className=\"navbar navbar-light\">\r\n      <span className=\"navbar-brand mb-0 h1\"><i className=\"fas fa-book-open pr-3\"></i> Promedio de notas</span>\r\n    </nav>\r\n  </header>\r\n);\r\n\r\nexport default header;","import React from 'react';\r\n\r\nconst nota = props => (\r\n  <tr>\r\n    <th scope=\"row\" className=\"align-middle\">{props.index+1}</th>\r\n    <td>\r\n      <input \r\n        id=\"nota\" \r\n        type=\"number\" \r\n        max=\"70\" \r\n        className=\"form-control w-75 campo\" \r\n        placeholder=\"0\" \r\n        onChange={props.changed}\r\n      />\r\n    </td>\r\n    <td>\r\n      <div className=\"input-group w-75\">\r\n        <input \r\n          id=\"porcentaje\" \r\n          type=\"number\" \r\n          max=\"70\" \r\n          className=\"form-control campo\" \r\n          placeholder=\"0\" \r\n          onChange={props.changed}\r\n        />\r\n        <div className=\"input-group-append\">\r\n          <span className=\"input-group-text\">%</span>\r\n        </div>\r\n      </div>\r\n    </td>\r\n  </tr>\r\n);\r\n\r\nexport default nota;","import React from 'react';\r\n\r\nimport Nota from './Nota/Nota';\r\n\r\nconst listaNotas = props => (\r\n  <div className=\"container\">\r\n    <div className=\"row mb-5\">\r\n      <div className=\"col-md-6 col-xs-12 m-3 mx-auto\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Nota</th>\r\n              <th scope=\"col\">Porcentaje</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              props.notas.map((n, i) => \r\n                <Nota \r\n                  key={i} \r\n                  index={i} \r\n                  nota={n.nota} \r\n                  porcentaje={n.porcentaje} \r\n                  changed={(event) => props.changed(event, i)}\r\n                />\r\n              )\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default listaNotas;","import React from 'react';\r\n\r\nconst footer = props => (\r\n  <div className=\"card fixed-bottom w-100\">\r\n    <div className=\"card-body\">\r\n      <div className=\"row\">\r\n        <div className=\"col-6 px-0 text-center\">\r\n          <button className=\"btn btn-success mx-1\" onClick={props.addScore}><i className=\"fas fa-plus\"></i></button>\r\n          <button className=\"btn btn-danger mx-1\" onClick={props.deleteScore}><i className=\"far fa-trash-alt\"></i></button>\r\n          <button className=\"btn btn-info mx-1\" onClick={props.showInfo}><i className=\"far fa-question-circle\"></i></button>\r\n        </div>\r\n        <div className=\"col-6 text-center\">\r\n          <small>Promedio: </small>\r\n          <input className=\"form-control d-inline w-50\" value={props.promedio} disabled />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default footer;","import React, { Component } from 'react';\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\n\nimport Header from '../components/Header/Header';\nimport ListaNotas from '../components/ListaNotas/ListaNotas';\nimport Footer from '../components/Footer/Footer';\n\nclass App extends Component {\n  state = {\n    notas: [\n      {nota: 0, porcentaje: 0},\n      {nota: 0, porcentaje: 0},\n      {nota: 0, porcentaje: 0},\n      {nota: 0, porcentaje: 0},\n      {nota: 0, porcentaje: 0},\n    ],\n    promedio: 0\n  };\n\n  scoreChangedHandler = (event, index) => {\n    const nota = {\n      ...this.state.notas[index]\n    };\n    let target = event.target.id;\n    nota[target] = Number(event.target.value);\n    const notas = [...this.state.notas];\n    notas[index] = nota;\n    console.log(notas);\n    this.setState({\n      notas\n    }, () => {\n      this.averageHandler();\n    });\n  }\n\n  averageHandler = () => {\n    const notas = this.state.notas.map(n => n.nota);\n    const porcentaje = this.state.notas.map(p => p.porcentaje);\n    let promedio = 0;\n    notas.forEach((nota, i) => {\n      promedio += nota * Number([porcentaje[i]]) / 100;\n    });\n    console.log(promedio);\n    this.setState({\n      promedio\n    });\n  }\n\n  addScoreHandler = (index) => {\n    const nuevaNota = {nota: 0, porcentaje: 0};\n    this.setState({\n      notas: [\n        ...this.state.notas,\n        nuevaNota\n      ]\n    });\n  }\n\n  deleteScoreHandler = (index) => {\n    const notas = [...this.state.notas];\n    notas.pop();\n    this.setState({\n      notas\n    }, () => {\n      this.averageHandler();\n    });\n  }\n\n  showInfoHandler = () => {\n    const MySwal = withReactContent(Swal);\n\n    MySwal.fire({\n      onOpen: () => {\n        MySwal.clickConfirm()\n      }\n    }).then(() => {\n      return MySwal.fire({\n        type: 'info',\n        html:\n          '<button class=\"btn btn-success btn-sm\" disabled><i class=\"fas fa-plus\"></i></button> Agregar nueva nota.<br>' +\n          '<button class=\"btn btn-danger btn-sm mt-1\" disabled><i class=\"far fa-trash-alt\"></i></button> Eliminar la última nota.' +\n          '<hr>' +\n          '<div class=\"text-center\">' +\n          '<small class=\"text-muted\">Creado por <a target=\"_blank\" href=\"https://github.com/a-fuenzalida\">Andrés Fuenzalida</a></small>' +\n          '</div>'\n      })\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <ListaNotas notas={this.state.notas} changed={this.scoreChangedHandler} />\n        <Footer \n          addScore={this.addScoreHandler} \n          deleteScore={this.deleteScoreHandler} \n          promedio={this.state.promedio}\n          showInfo={this.showInfoHandler}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}